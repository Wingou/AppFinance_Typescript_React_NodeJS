type CatGql {
  id: ID!
  name: String!
  position: Int!
  template: Int!
}

type ObjGql {
  id: ID!
  name: String!
  template: Int!
  cat: ObjCatGql!
}

type ObjCatGql {
  id: ID!
}

input ObjectsWhereInput {
  id: ID
  catId: ID
}

type YearGql {
  name: String!
}

type PriceGql {
  id: ID!
  amount: String!
  comment: String!
  actionDate: String!
  dateCreate: String!
  dateModif: String!
  template: Int!
  obj: PriceObjGql!
  cat: CatGql!
}

type PriceObjGql {
  id: ID!
  name: String!
  template: Int!
}

input PricesByDatesWhereInput {
  years: String!
  months: String!
}

input PriceByIdWhereInput {
  id: ID!
}

type Query {
  categories: [CatGql!]
  objects(where: ObjectsWhereInput): [ObjGql!]
  years: [YearGql!]
  pricesByDates(where: PricesByDatesWhereInput!): [PriceGql!]
  priceById(where: PriceByIdWhereInput!): [PriceGql!]
}

input AddPriceInsertInput  {
  amount: String!
  comment: String!
  actionDate: String!
  objId: String!
}

input ModifPriceUpdateInput  {
  id: ID!
  amount: String!
  comment: String!
  actionDate: String!
  objId: String!
}

type Mutation {
  addPrice (insert : AddPriceInsertInput!):PriceGql!,
  modifPrice (  update: ModifPriceUpdateInput!):PriceGql!
}

mutation AddPrice($insert: AddPriceInsertInput!) {
  addPrice(insert: $insert) {
    id
    amount
    comment
    actionDate
    obj {
      id
      name
    }
    cat {
      id
      name
    }
  }
}


mutation ModifPrice(  $update: ModifPriceUpdateInput!) {
  modifPrice( update: $update) {
    id
    amount
    comment
    actionDate
    obj {
      id
      name
    }
    cat {
      id
      name
    }
  }
}